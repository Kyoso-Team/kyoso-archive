# The default values below are set assuming you're running a dev environemnt with Docker running. 

# {'production' | 'development'}
NODE_ENV=development
# `'automatic'` means running the test suite (automatically set at runtime).
# `'manual'` is for deployments where real users can test.
# `undefined` means there are no tests running
# {'automatic' | 'manual' | undefined}
TEST_ENV=undefined

# {number} osu! user ID of the user who is the owner of the website and get admin by default
OWNER=
# {number[]} Optional. osu! user IDs of the users who are able to provide feedback and test the site
TESTERS=[]
# {string} Optional. An email to use as a contact. Format: {user}@{domain}.{extension}
PUBLIC_CONTACT_EMAIL=admin@example.com

# {string}
DATABASE_URL=postgresql://kyoso:kyoso@localhost:3010/kyoso_dev
# {string}
TEST_DATABASE_URL=postgresql://kyoso:kyoso@localhost:3010/kyoso_test

# {string} Random string as a secret key used to sign JWT tokens
JWT_SECRET=jwt_abcdefghijklmnopqrstuvwxyz1234567890
# {string} Random string as a secret key used to execute cron jobs
CRON_SECRET=cron_abcdefghijklmnopqrstuvwxyz1234567890

# osu! OAuth
# Log into your osu! account and create an OAuth application (https://osu.ppy.sh/home/account/edit).
# The application callback URL must match `PUBLIC_OSU_REDIRECT_URI` and should point to `/api/auth/callback/osu`.

# {number}
PUBLIC_OSU_CLIENT_ID=
# {string}
OSU_CLIENT_SECRET=
# {string}
PUBLIC_OSU_REDIRECT_URI=http://localhost:5173/api/auth/callback/osu

# Discord OAuth
# Log into your Discord account in a browser and create an OAuth application (https://discord.com/developers/applications).
# Under the `OAuth2` menu in the UI, you'll find the first four variables.
# This app must have two redirect URIs: the first one must match `PUBLIC_DISCORD_MAIN_REDIRECT_URI` and should point to `/api/auth/callback/discord`; the second one must match `PUBLIC_DISCORD_CHANGE_ACCOUNT_REDIRECT_URI` and should point to `/api/auth/callback/discord/change`.
# For the bot token, go under the `Bot` menu, create a bot for the OAuth app and copy its token (no bot permissions need to be specified).

# {string}
PUBLIC_DISCORD_CLIENT_ID=
# {string}
DISCORD_CLIENT_SECRET=
# {string} URI for the sign up and log in flow.
PUBLIC_DISCORD_MAIN_REDIRECT_URI=http://localhost:5173/api/auth/callback/discord
# {string} URI for the change Discord account flow.
PUBLIC_DISCORD_CHANGE_ACCOUNT_REDIRECT_URI=http://localhost:5173/api/auth/callback/discord/change
# {string} Bot token from the registered application
DISCORD_BOT_TOKEN=

# IPInfo
# Log into your IPInfo account and go to your dashboard (https://ipinfo.io/account/home), scroll down and copy the access token.
# IPInfo is not used in development.

# {string}
IPINFO_ACCESS_TOKEN=ipinfo_abcdefghijklmnopqrstuvwxyz1234567890

# Upstash Redis
# Log into your Upstash account and create a Redis database (https://console.upstash.com). In the dashboard for the Redis DB, go to the "REST API" section and copy variables.

# {string}
UPSTASH_REDIS_REST_URL=http://localhost:3014
# {string}
UPSTASH_REDIS_REST_TOKEN=kyoso

# S3
# MinIO (development)
# `S3_FORCE_PATH_STYLE` must be set to `true` and `S3_REGION` must be set to `us-east-1`.
# Log into MinIO (http://localhost:3012/login, username: kyoso, password: kyoso123) and go to the "Access Keys" page (http://localhost:3012/access-keys).
# Click "Create access key", copy the access key and secret key to fill the `S3_ACCESS_KEY_ID` and `S3_SECRET_ACCESS_KEY` variables.
# Set an expiry date (note: it will error if the date is over 1 year in the future) and click "Create".
# DigitalOcean Spaces (production)
# To be written...

# {boolean}
S3_FORCE_PATH_STYLE=true
# {string}
S3_ENDPOINT=http://localhost:3011
# {string}
S3_REGION=us-east-1
# {string}
S3_ACCESS_KEY_ID=
# {string}
S3_SECRET_ACCESS_KEY=